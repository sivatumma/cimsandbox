[{
    "providerName": "MQI",
    "API": {
        "endPoint": "api/mqi",
        "API_KEY": "EXAMPLE: 4b2891f7-f272-4f1e-a51d",
        "services": [{
            "serviceName": "light",
            "serviceList": [{
                "icon": "assets/lightOn.png",
                "requestDescription": "Get All Light Data",
                "postBody": {
                    "query": {
                        "documentation": "Get all lights",
                        "find": {
                            "light": {}
                        }
                    }
                }
            }, {
                "icon": "assets/lightViewport.png",
                "requestDescription": "Get Light Data in Viewport",
                "postBody": {
                    "query": {
                        "documentation": "Get all lights within the specified viewport. Lat is specified in the format minLat,maxLat and Lon is specified as minLong, maxLong",
                        "find": {
                            "light": {
                                "geocoordinates": {
                                    "lat": "+37.232976,+37.442615",
                                    "lon": "-122.174149,-121.771088"
                                }
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightPause.png",
                "requestDescription": "Set State to : ON",
                "postBody": {
                    "query": {
                        "documentation": "Turn on all lights with the following IDs",
                        "process": {
                            "set": {
                                "powerstate": "ON"
                            }
                        },
                        "find": {
                            "light": {
                                "sid": "sensity.*8D1A5ZW9"
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightOff.png",
                "requestDescription": "Set State to : OFF",
                "postBody": {
                    "query": {
                        "documentation": "Turn off all lights with the following IDs",
                        "process": {
                            "set": {
                                "powerstate": "OFF"
                            }
                        },
                        "find": {
                            "light": {
                                "sid": "sensity.*8D1A5ZW9"
                            }
                        }
                    }
                }
            }]
        }, {
            "serviceName": "ambience",
            "serviceList": [{
                "icon": "assets/ambienceMood.png",
                "requestDescription": "Get Ambience from All Sensors",
                "postBody": {
                    "query": {
                        "documentation": "Get ambient light level from all sensors",
                        "find": {
                            "ambience": {}
                        }
                    }
                }
            }, {
                "icon": "assets/ambienceMood.png",
                "requestDescription": "Get from specific Sensors",
                "postBody": {
                    "query": {
                        "documentation": "Get ambient light level from all sensors within the specified bounding box",
                        "find": {
                            "ambience": {
                                "geocoordinates": {
                                    "lat": "+37.232976,+37.442615",
                                    "lon": "-122.174149,-121.771088"
                                }
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/ambienceMood.png",
                "requestDescription": "Filter on Flux level",
                "postBody": {
                    "query": {
                        "documentation": "Get ambient light level from all sensors within the specified bounding box where the lux level < 100",
                        "find": {
                            "ambience": {
                                "geocoordinates": {
                                    "lat": "+37.232976,+37.442615",
                                    "lon": "-122.174149,-121.771088"
                                },
                                "illuminance": {
                                    "Value": {
                                        "lt": 100
                                    }
                                }
                            }
                        }
                    }
                }
            }]
        }, {
            "serviceName": "traffic",
            "serviceList": [{
                "icon": "assets/road.png",
                "requestDescription": "Get for Roads",
                "postBody": {
                    "query": {
                        "documentation": "Get traffic details for all the road segments.",
                        "find": {
                            "roadSegment": {}
                        }
                    }
                }
            }, {
                "icon": "assets/routes.png",
                "requestDescription": "Get for Routes",
                "postBody": {
                    "query": {
                        "documentation": "Get traffic details for all the routes.",
                        "find": {
                            "route": {}
                        }
                    }
                }
            }]
        }, {
            "serviceName": "parking",
            "serviceList": [{
                "icon": "assets/parking.png",
                "requestDescription": "Get All Parking Data",
                "postBody": {
                    "query": {
                        "documentation": "Get parking space info",
                        "find": {
                            "parkingSpace": {}
                        }
                    }
                }
            }, {
                "icon": "assets/parking.png",
                "requestDescription": "Filter - Occupied",
                "postBody": {
                    "query": {
                        "documentation": "Get parking space info, retrieve only parking spots with specified state",
                        "find": {
                            "parkingSpace": {
                                "parkingSpots": {
                                    "state": {
                                        "occupied": true
                                    }
                                }
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/parking.png",
                "requestDescription": "Filter - Vacant",
                "postBody": {
                    "query": {
                        "documentation": "Get parking space - retrieve only parking spots with specified state",
                        "find": {
                            "parkingSpace": {
                                "parkingSpots": {
                                    "state": {
                                        "occupied": false
                                    }
                                }
                            }
                        }
                    }
                }
            }]
        }, {
            "serviceName": "CRUD",
            "serviceList": [{
                "icon": "assets/crud.svg",
                "url":"/api/mqi/crud",
                "requestDescription": "Create ParkingOpParams",
                "postBody": {
                    "type": "ParkingOperationParameters",
                    "operation": "create",
                    "ParkingOperationParameters": {
                        "name": "daytimeParking",
                        "sid": "daytimeParking",
                        "timeLimits": {
                            "validTimeOfDay": [{
                                "startTime": "08:00:00",
                                "endTime": "18:00:00"
                            }]
                        }
                    }
                }
            }]
        }]
    }
}, {
    "providerName": "EBC",
    "API": {
        "endPoint": "api/ebc",
        "API_KEY": "EXAMPLE: 4b2891f7-f272-4f1e-a51d",
        "services": [{
            "serviceName": "illumination",
            "serviceList": [{
                "icon": "assets/lightViewport.png",
                "requestDescription": "Filter on Operater + viewport",
                "postBody": {
                    "query": {
                        "documentation": "Get all lights operated by specified organization within the specified viewport. Lat is specified in the format minLat,maxLat and Lon is specified as minLong, maxLong",
                        "find": {
                            "light": {
                                "operatedBy": "sensity-qa",
                                "geocoordinates": {
                                    "lat": "+37.232976,+37.442615",
                                    "lon": "-122.174149,-121.771088"
                                }
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightOff.png",
                "requestDescription": "Filter by IDs",
                "postBody": {
                    "query": {
                        "documentation": "Get all lights operated by specified organization and with the given                         ids.Id 's are comma separated and case insensitive",
                        "find": {
                            "light": {
                                "operatedBy": "sensity-qa",
                                "id": ["sensity.*HH6DTAMb", "sensity.*Q2BGKVGZ"]
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightOff.png",
                "requestDescription": "All operated by a provider",
                "postBody": {
                    "query": {
                        "documentation": "Get all lights operated by specified organization(maps to logical scopes)",
                        "find": {
                            "light": {
                                "operatedBy": "sensity‐qa"
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightOff.png",
                "requestDescription": "Set Power State - ON",
                "postBody": {
                    "query": {
                        "documentation": "Turn on all lights operated by specified organization (maps to logical scopes)",
                        "process": {
                            "set": {
                                "powerstate": "ON"
                            }
                        },
                        "find": {
                            "light": {
                                "operatedBy": "sensity‐qa"
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightOff.png",
                "requestDescription": "Set Power State - OFF",
                "postBody": {
                    "query": {
                        "documentation": "Turn off all lights lights operated by sensity-‐lab",
                        "find": {
                            "light": {
                                "operatedby": "sensity‐qa"
                            }
                        },
                        "process": {
                            "set": {
                                "powerstate": "off"
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightOff.png",
                "requestDescription": "Set Intensity Level",
                "postBody": {
                    "query": {
                        "documentation": "Set the intensity level to 50 for all lights operated by specified organization (maps to logical scopes) and within a specified viewport",
                        "process": {
                            "set": {
                                "intensitylevel": "50"
                            }
                        },
                        "find": {
                            "light": {
                                "operatedBy": "sensity‐qa",
                                "geocoordinates": {
                                    "lat": "+37.232976,+37.442615",
                                    "lon": "-122.174149,‐121.771088"
                                }
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightOff.png",
                "requestDescription": "Schedule",
                "postBody": {
                    "query": {
                        "documentation": "Set the intensity level to 50 for all lights operated by specified organization (maps to logical scopes) for 10 mins",
                        "process": {
                            "set": {
                                "intensitylevel": "50"
                            },
                            "schedule": {
                                "duration": 10
                            }
                        },
                        "find": {
                            "light": {
                                "operatedBy": "sensity­‐qa",
                                "geocoordinates": {
                                    "lat": "+37.232976,+37.442615",
                                    "lon": "‐122.174149,‐121.771088"
                                }
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightOff.png",
                "requestDescription": "Apply Policy (Ex 1)",
                "postBody": {
                    "query": {
                        "documentation": "Turn on all specified lights on 1st of Sep 2014 @ 6 AM",
                        "policy": {
                            "name": "Policy1",
                            "trigger": {
                                "name": "Trigger1",
                                "year": {
                                    "eq": 2014,
                                    "month": {
                                        "eq": "SEP",
                                        "day": {
                                            "eq": "1",
                                            "hour": {
                                                "eq": 6
                                            }
                                        }
                                    }
                                }
                            },
                            "action": {
                                "name": "Action1",
                                "set": {
                                    "powerstate": "ON"
                                }
                            }
                        },
                        "find": {
                            "light": {
                                "operatedBy": "sensity‐qa",
                                "id": ["sensity.*HH6DTAMb", "sensity.*Q2BGKVGZ"]
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightOff.png",
                "requestDescription": "Apply Policy (Ex 2)",
                "postBody": {
                    "query": {
                        "documentation": "Set intensity level of all specified lights to 50% on 1st of Sep 2014 @ 6:30 AM and then make it 100% at 1st of Sep 2014, 8:00 AM",
                        "policy": [{
                            "name": "Policy2",
                            "trigger": {
                                "name": "Trigger1",
                                "year": {
                                    "eq": 2014,
                                    "month": {
                                        "eq": "SEP",
                                        "day": {
                                            "eq": "1",
                                            "hour": {
                                                "eq": 6,
                                                "minute": {
                                                    "eq": "30"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "action": {
                                "name": "Action1",
                                "set": {
                                    "intensitylevel": "50"
                                }
                            }
                        }, {
                            "name": "Policy2",
                            "trigger": {
                                "name": "Trigger2",
                                "year": {
                                    "eq": 2014,
                                    "month": {
                                        "eq": "SEP",
                                        "day": {
                                            "eq": "1",
                                            "hour": {
                                                "eq": 8
                                            }
                                        }
                                    }
                                }
                            },
                            "action": {
                                "name": "Action2",
                                "set": {
                                    "intensitylevel": "100"
                                }
                            }
                        }],
                        "find": {
                            "light": {
                                "operatedBy": "sensity‐qa"
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightOff.png",
                "requestDescription": "Apply Policy (Ex 3)",
                "postBody": {
                    "query": {
                        "documentation": "Set intensity level of all specified lights to 50% on 1st of Sep 2014 @ 6:30 AM and then make it 100% at 1st of Sep 2014, 8:00 AM",
                        "policy": [{
                            "name": "Policy1",
                            "trigger": {
                                "name": "Trigger1",
                                "year": {
                                    "eq": 2014,
                                    "month": {
                                        "eq": "SEP",
                                        "day": {
                                            "eq": "1",
                                            "hour": {
                                                "eq": 6,
                                                "minute": {
                                                    "eq": "30"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "action": {
                                "name": "Action1",
                                "set": {
                                    "intensitylevel": "50"
                                }
                            }
                        }, {
                            "name": "Policy2",
                            "trigger": {
                                "name": "Trigger2",
                                "year": {
                                    "eq": 2014,
                                    "month": {
                                        "eq": "SEP",
                                        "day": {
                                            "eq": "1",
                                            "hour": {
                                                "eq": 8
                                            }
                                        }
                                    }
                                }
                            },
                            "action": {
                                "name": "Action2",
                                "set": {
                                    "intensitylevel": "100"
                                }
                            }
                        }],
                        "find": {
                            "light": {
                                "operatedBy": "sensity-­‐qa"
                            }
                        }
                    }
                }
            }]
        }, {
            "serviceName": ""
        }]
    }
}, {
    "providerName": "DMS",
    "API": {
        "endPoint": "/api/mqi",
        "API_KEY": "EXAMPLE: 4b2891f7-f272-4f1e-a51d",
        "services": [{
            "serviceName": "light",
            "serviceList": [{
                "icon": "assets/lightOn.png",
                "requestDescription": "Get All Light Data",
                "postBody": {
                    "query": {
                        "documentation": "Get all lights",
                        "find": {
                            "light": {}
                        }
                    }
                }
            }, {
                "icon": "assets/lightViewport.png",
                "requestDescription": "Get Light Data in Viewport",
                "postBody": {
                    "query": {
                        "documentation": "Get all lights within the specified viewport. Lat is specified in the format minLat,maxLat and Lon is specified as minLong, maxLong",
                        "find": {
                            "light": {
                                "geocoordinates": {
                                    "lat": "+37.232976,+37.442615",
                                    "lon": "-122.174149,-121.771088"
                                }
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightPause.png",
                "requestDescription": "Set State to : ON",
                "postBody": {
                    "query": {
                        "documentation": "Turn on all lights with the following IDs",
                        "process": {
                            "set": {
                                "powerstate": "ON"
                            }
                        },
                        "find": {
                            "light": {
                                "sid": "sensity.*8D1A5ZW9"
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightOff.png",
                "requestDescription": "Set State to : OFF",
                "postBody": {
                    "query": {
                        "documentation": "Turn off all lights with the following IDs",
                        "process": {
                            "set": {
                                "powerstate": "OFF"
                            }
                        },
                        "find": {
                            "sid": "sensity.*8D1A5ZW9"
                        }
                    }
                }
            }]
        }, {
            "serviceName": "ambience",
            "serviceList": [{
                "icon": "assets/lightViewport.png",
                "requestDescription": "Get Ambience from All Sensors",
                "postBody": {
                    "query": {
                        "documentation": "Get ambient light level from all sensors",
                        "find": {
                            "ambience": {}
                        }
                    }
                }
            }, {
                "icon": "assets/lightViewport.png",
                "requestDescription": "Get from specific Sensors",
                "postBody": {
                    "query": {
                        "documentation": "Get ambient light level from all sensors within the specified bounding box",
                        "find": {
                            "ambience": {
                                "geocoordinates": {
                                    "lat": "+37.232976,+37.442615",
                                    "lon": "-122.174149,-121.771088"
                                }
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightViewport.png",
                "requestDescription": "Filter on Flux level",
                "postBody": {
                    "query": {
                        "documentation": "Get ambient light level from all sensors within the specified bounding box where the lux level < 100",
                        "find": {
                            "ambience": {
                                "geocoordinates": {
                                    "lat": "+37.232976,+37.442615",
                                    "lon": "-122.174149,-121.771088"
                                },
                                "illuminance": {
                                    "Value": {
                                        "lt": 100
                                    }
                                }
                            }
                        }
                    }
                }
            }]
        }, {
            "serviceName": "traffic",
            "serviceList": [{
                "icon": "assets/road.png",
                "requestDescription": "Get for Roads",
                "postBody": {
                    "query": {
                        "documentation": "Get traffic details for all the road segments.",
                        "find": {
                            "roadSegment": {}
                        }
                    }
                }
            }, {
                "icon": "assets/routes.png",
                "requestDescription": "Get for Routes",
                "postBody": {
                    "query": {
                        "documentation": "Get traffic details for all the routes.",
                        "find": {
                            "route": {}
                        }
                    }
                }
            }]
        }, {
            "serviceName": "parking",
            "serviceList": [{
                "icon": "assets/lightViewport.png",
                "requestDescription": "Get All Parking Data",
                "postBody": {
                    "query": {
                        "documentation": "Get parking space info",
                        "find": {
                            "parkingSpace": {}
                        }
                    }
                }
            }, {
                "icon": "assets/lightViewport.png",
                "requestDescription": "Filter - Occupied",
                "postBody": {
                    "query": {
                        "documentation": "Get parking space info, retrieve only parking spots with specified state",
                        "find": {
                            "parkingSpace": {
                                "parkingSpots": {
                                    "state": {
                                        "occupied": true
                                    }
                                }
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightViewport.png",
                "requestDescription": "Filter - Vacant",
                "postBody": {
                    "query": {
                        "documentation": "Get parking space operated by specified organization, but retrieve only parking spots with specified state",
                        "find": {
                            "parkingSpace": {
                                "operatedBy": "sensity‐qa",
                                "parkingSpots": {
                                    "state": {
                                        "occupied": false
                                    }
                                }
                            }
                        }
                    }
                }
            }]
        }]
    }
}, {
    "providerName": "World Sensing",
    "API": {
        "endPoint": "/api/worldsensing",
        "API_KEY": "EXAMPLE: 4b2891f7-f272-4f1e-a51d",
        "services": [{
            "serviceName": "light",
            "serviceList": [{
                "icon": "assets/lightOn.png",
                "requestDescription": "Get All Light Data",
                "postBody": {
                    "query": {
                        "documentation": "Get all lights",
                        "find": {
                            "light": {}
                        }
                    }
                }
            }, {
                "icon": "assets/lightViewport.png",
                "requestDescription": "Get Light Data in Viewport",
                "postBody": {
                    "query": {
                        "documentation": "Get all lights within the specified viewport. Lat is specified in the format minLat,maxLat and Lon is specified as minLong, maxLong",
                        "find": {
                            "light": {
                                "geocoordinates": {
                                    "lat": "+37.232976,+37.442615",
                                    "lon": "-122.174149,-121.771088"
                                }
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightPause.png",
                "requestDescription": "Set State to : ON",
                "postBody": {
                    "query": {
                        "documentation": "Turn on all lights with the following IDs",
                        "process": {
                            "set": {
                                "powerstate": "ON"
                            }
                        },
                        "find": {
                            "light": {
                                "sid": "sensity.*8D1A5ZW9"
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightOff.png",
                "requestDescription": "Set State to : OFF",
                "postBody": {
                    "query": {
                        "documentation": "Turn off all lights with the following IDs",
                        "process": {
                            "set": {
                                "powerstate": "OFF"
                            }
                        },
                        "find": {
                            "sid": "sensity.*8D1A5ZW9"
                        }
                    }
                }
            }]
        }, {
            "serviceName": "ambience",
            "serviceList": [{
                "icon": "assets/lightViewport.png",
                "requestDescription": "Get Ambience from All Sensors",
                "postBody": {
                    "query": {
                        "documentation": "Get ambient light level from all sensors",
                        "find": {
                            "ambience": {}
                        }
                    }
                }
            }, {
                "icon": "assets/lightViewport.png",
                "requestDescription": "Get from specific Sensors",
                "postBody": {
                    "query": {
                        "documentation": "Get ambient light level from all sensors within the specified bounding box",
                        "find": {
                            "ambience": {
                                "geocoordinates": {
                                    "lat": "+37.232976,+37.442615",
                                    "lon": "-122.174149,-121.771088"
                                }
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightViewport.png",
                "requestDescription": "Filter on Flux level",
                "postBody": {
                    "query": {
                        "documentation": "Get ambient light level from all sensors within the specified bounding box where the lux level < 100",
                        "find": {
                            "ambience": {
                                "geocoordinates": {
                                    "lat": "+37.232976,+37.442615",
                                    "lon": "-122.174149,-121.771088"
                                },
                                "illuminance": {
                                    "Value": {
                                        "lt": 100
                                    }
                                }
                            }
                        }
                    }
                }
            }]
        }, {
            "serviceName": "traffic",
            "serviceList": [{
                "icon": "assets/road.png",
                "requestDescription": "Get for Roads",
                "postBody": {
                    "query": {
                        "documentation": "Get traffic details for all the road segments.",
                        "find": {
                            "roadSegment": {}
                        }
                    }
                }
            }, {
                "icon": "assets/routes.png",
                "requestDescription": "Get for Routes",
                "postBody": {
                    "query": {
                        "documentation": "Get traffic details for all the routes.",
                        "find": {
                            "route": {}
                        }
                    }
                }
            }]
        }, {
            "serviceName": "parking",
            "serviceList": [{
                "icon": "assets/lightViewport.png",
                "requestDescription": "Get All Parking Data",
                "postBody": {
                    "query": {
                        "documentation": "Get parking space info",
                        "find": {
                            "parkingSpace": {}
                        }
                    }
                }
            }, {
                "icon": "assets/lightViewport.png",
                "requestDescription": "Filter - Occupied",
                "postBody": {
                    "query": {
                        "documentation": "Get parking space info, retrieve only parking spots with specified state",
                        "find": {
                            "parkingSpace": {
                                "parkingSpots": {
                                    "state": {
                                        "occupied": true
                                    }
                                }
                            }
                        }
                    }
                }
            }, {
                "icon": "assets/lightViewport.png",
                "requestDescription": "Filter - Vacant",
                "postBody": {
                    "query": {
                        "documentation": "Get parking space operated by specified organization, but retrieve only parking spots with specified state",
                        "find": {
                            "parkingSpace": {
                                "operatedBy": "sensity‐qa",
                                "parkingSpots": {
                                    "state": {
                                        "occupied": false
                                    }
                                }
                            }
                        }
                    }
                }
            }]
        }]
    }
}]